<?php

return [
    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | If you use the Encryption class, you must set an encryption key.
    | See the user guide for more info.
    |
    | https://codeigniter.com/user_guide/libraries/encryption.html
    |
    */
    'encryption_key'       =>  '',

    /*
    |--------------------------------------------------------------------------
    | Session Variables
    |--------------------------------------------------------------------------
    |
    | 'sess_driver'
    |
    |	The storage driver to use: files, database, redis, memcached
    |
    | 'sess_cookie_name'
    |
    |	The session cookie name, must contain only [0-9a-z_-] characters
    |
    | 'sess_expiration'
    |
    |	The number of SECONDS you want the session to last.
    |	Setting to 0 (zero) means expire when the browser is closed.
    |
    | 'sess_save_path'
    |
    |	The location to save sessions to, driver dependent.
    |
    |	For the 'files' driver, it's a path to a writable directory.
    |	WARNING: Only absolute paths are supported!
    |
    |	For the 'database' driver, it's a table name.
    |	Please read up the manual for the format with other session drivers.
    |
    |	IMPORTANT: You are REQUIRED to set a valid save path!
    |
    | 'sess_match_ip'
    |
    |	Whether to match the user's IP address when reading the session data.
    |
    |	WARNING: If you're using the database driver, don't forget to update
    |	         your session table's PRIMARY KEY when changing this setting.
    |
    | 'sess_time_to_update'
    |
    |	How many seconds between CI regenerating the session ID.
    |
    | 'sess_regenerate_destroy'
    |
    |	Whether to destroy session data associated with the old session ID
    |	when auto-regenerating the session ID. When set to FALSE, the data
    |	will be later deleted by the garbage collector.
    |
    | Other session cookie settings are shared with the rest of the application,
    | except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.
    |
    */
    'sess_driver' => 'files',
    'sess_cookie_name'          => 'radion_session_anvil',
    'sess_expiration'           => 1800, // 30 minutes 
    'sess_save_path'            => BR_PATH . 'Resources/Storage/cache/sessions/',
    'sess_expire_on_close'      => true,
    'sess_encrypt_cookie'       => false,
    'sess_use_database'         => false,
    'sess_table_name'           => 'radion_sessions',
    'sess_match_ip'             => false,
    'sess_match_useragent'      => true,
    'sess_time_to_update'       => 300,
    'sess_time_to_update'       => 1,

    /*
    |--------------------------------------------------------------------------
    | Cookie Related Variables
    |--------------------------------------------------------------------------
    |
    | 'cookie_prefix'   => Set a cookie name prefix if you need to avoid collisions
    | 'cookie_domain'   => Set to .your-domain.com for site-wide cookies
    | 'cookie_path'     => Typically will be a forward slash
    | 'cookie_secure'   => Cookie will only be set if a secure HTTPS connection exists.
    | 'cookie_httponly' => Cookie will only be accessible via HTTP(S) (no javascript)
    |
    | Note: These settings (with the exception of 'cookie_prefix' and
    |       'cookie_httponly') will also affect sessions.
    |
    */
    'cookie_prefix'             =>  '',
    'cookie_domain'             =>  '',
    'cookie_path'               => '/',
    'cookie_secure'             => false,
    'cookie_httponly'           => false,
    'cookie_runtime'            => 1209600,
    'cookie_http'               => true,
    'session_runtime'           => 604800,

    /*
    |--------------------------------------------------------------------------
    | Standardize newlines
    |--------------------------------------------------------------------------
    |
    | Determines whether to standardize newline characters in input data,
    | meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.
    |
    | This is particularly useful for portability between UNIX-based OSes,
    | (usually \n) and Windows (\r\n).
    |
    */
    'standardize_newlines' => false,

    /*
    |--------------------------------------------------------------------------
    | Global XSS Filtering
    |--------------------------------------------------------------------------
    |
    | Determines whether the XSS filter is always active when GET, POST or
    | COOKIE data is encountered
    |
    | WARNING: This feature is DEPRECATED and currently available only
    |          for backwards compatibility purposes!
    |
    */
    'global_xss_filtering' => false,

    /*
    |--------------------------------------------------------------------------
    | Cross Site Request Forgery
    |--------------------------------------------------------------------------
    | Enables a CSRF cookie token to be set. When set to TRUE, token will be
    | checked on a submitted form. If you are accepting user data, it is strongly
    | recommended CSRF protection be enabled.
    |
    | 'csrf_token_name' => The token name
    | 'csrf_cookie_name' => The cookie name
    | 'csrf_expire' => The number in seconds the token should expire.
    | 'csrf_regenerate' => Regenerate token on every submission
    | 'csrf_exclude_uris' => Array of URIs which ignore CSRF checks
    */

    'csrf_protection'     => false,

    'csrf_token_name' => 'csrf_test_name',
    'csrf_cookie_name' => 'csrf_cookie_name',
    'csrf_expire' => 7200,
    'csrf_regenerate' => false,
    'csrf_exclude_uris' => array(),

    /*
    |--------------------------------------------------------------------------
    | Output Compression
    |--------------------------------------------------------------------------
    |
    | Enables Gzip output compression for faster page loads.  When enabled,
    | the output class will test whether your server supports Gzip.
    | Even if it does, however, not all browsers support compression
    | so enable only if you are reasonably sure your visitors can handle it.
    |
    | Only used if zlib.output_compression is turned off in your php.ini.
    | Please do not use it together with httpd-level output compression.
    |
    | VERY IMPORTANT:  If you are getting a blank page when compression is enabled it
    | means you are prematurely outputting something to your browser. It could
    | even be a line of whitespace at the end of one of your scripts.  For
    | compression to work, nothing can be sent before the output buffer is called
    | by the output class.  Do not 'echo' any values with compression enabled.
    |
    */
    'compress_output' => false,

    /*
    |--------------------------------------------------------------------------
    | Master Time Reference
    |--------------------------------------------------------------------------
    |
    | Options are 'local' or any PHP supported timezone. This preference tells
    | the system whether to use your server's local time as the master 'now'
    | reference, or convert it to the configured one timezone. See the 'date
    | helper' page of the user guide for information regarding date handling.
    |
    */
    'time_reference' => 'local',

    /*
    |--------------------------------------------------------------------------
    | Rewrite PHP Short Tags
    |--------------------------------------------------------------------------
    |
    | If your PHP installation does not have short tag support enabled CI
    | can rewrite the tags on-the-fly, enabling you to utilize that syntax
    | in your view files.  Options are TRUE or FALSE (boolean)
    |
    | Note: You need to have eval() enabled for this to work.
    |
    */
    'rewrite_short_tags' => false,

    /*
    |--------------------------------------------------------------------------
    | Reverse Proxy IPs
    |--------------------------------------------------------------------------
    |
    | If your server is behind a reverse proxy, you must whitelist the proxy
    | IP addresses from which CodeIgniter should trust headers such as
    | HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify
    | the visitor's IP address.
    |
    | You can use both an array or a comma-separated list of proxy addresses,
    | as well as specifying whole subnets. Here are a few examples:
    |
    | Comma-separated:	'10.0.1.200,192.168.5.0/24'
    | Array:		array('10.0.1.200', '192.168.5.0/24')
    */
    'proxy_ips'        =>  ''
];