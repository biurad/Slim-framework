<?php

return [
    /*
    |--------------------------------------------------------------------------
    | URI PROTOCOL
    |--------------------------------------------------------------------------
    |
    | This item determines which server global should be used to retrieve the
    | URI string.  The default setting of 'REQUEST_URI' works for most servers.
    | If your links do not seem to work, try one of the other delicious flavors:
    |
    | 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']
    | 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']
    | 'PATH_INFO'      Uses $_SERVER['PATH_INFO']
    |
    | WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded!
    */
    'uri_protocol'    => 'REQUEST_URI',

    /*
    |--------------------------------------------------------------------------
    | Default Character Set
    |--------------------------------------------------------------------------
    |
    | This determines which character set is used by default in various methods
    | that require a character set to be provided.
    |
    | See http://php.net/htmlspecialchars for a list of supported charsets.
    |
    */
    'charset'         => 'UTF-8',

    /*
    |--------------------------------------------------------------------------
    | Allowed URL Characters
    |--------------------------------------------------------------------------
    |
    | This lets you specify which characters are permitted within your URLs.
    | When someone tries to submit a URL with disallowed characters they will
    | get a warning message.
    |
    | As a security measure you are STRONGLY encouraged to restrict URLs to
    | as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-
    |
    | Leave blank to allow all characters -- but only if you are insane.
    |
    | The configured value is actually a regular expression character group
    | and it will be executed as: ! preg_match('/^[<permitted_uri_chars>]+$/i
    |
    | DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!!
    |
    */
    'permitted_uri_chars' => 'a-z 0-9~%.:&_\-=',

    /*
    |--------------------------------------------------------------------------
    | Enable Query Strings
    |--------------------------------------------------------------------------
    |
    | By default CodeIgniter uses search-engine friendly segment based URLs:
    | example.com/who/what/where/
    |
    | By default CodeIgniter enables access to the $_GET array.  If for some
    | reason you would like to disable it, set 'allow_get_array' to FALSE.
    |
    | You can optionally enable standard query string based URLs:
    | example.com?who=me&what=something&where=here
    |
    | Options are: TRUE or FALSE (boolean)
    |
    | The other items let you set the query string 'words' that will
    | invoke your controllers and its functions:
    | example.com/index.php?c=controller&m=function
    |
    | Please note that some of the helpers won't work as expected when
    | this feature is enabled, since CodeIgniter is designed primarily to
    | use segment based URLs.
    |
    */
    'allow_get_array'           => true,
    'enable_query_strings'      => false,

    /*
    |--------------------------------------------------------------------------
    | Error Logging Threshold
    |--------------------------------------------------------------------------
    |
    | You can enable error logging by setting a threshold over zero. The
    | threshold determines what gets logged. Threshold options are:
    |
    |	0 = Disables logging, Error logging TURNED OFF
    |	1 = Error Messages (including PHP errors)
    |	2 = Debug Messages
    |	3 = Informational Messages
    |	4 = All Messages
    |
    | You can also pass an array with threshold levels to show individual error types
    |
    | 	array(2) = Debug Messages, without Error Messages
    |
    | For a live site you'll usually only enable Errors (1) to be logged otherwise
    | your log files will fill up very fast.
    |
    */
    'log_threshold'         => 0,

    /*
    |--------------------------------------------------------------------------
    | Error Logging Directory Path
    |--------------------------------------------------------------------------
    |
    | Leave this BLANK unless you would like to set something other than the default
    | application/logs/ directory. Use a full server path with trailing slash.
    |
    */
    'log_path'              => '',

    /*
    |--------------------------------------------------------------------------
    | Log File Extension
    |--------------------------------------------------------------------------
    |
    | The default filename extension for log files. The default 'php' allows for
    | protecting the log files via basic scripting, when they are to be stored
    | under a publicly accessible directory.
    |
    | Note: Leaving it blank will default to 'temp'.
    |
    */
    'log_file_extension'        => '',

    /*
    |--------------------------------------------------------------------------
    | Log File Permissions
    |--------------------------------------------------------------------------
    |
    | The file system permissions to be applied on newly created log files.
    |
    | IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal
    |            integer notation (i.e. 0700, 0644, etc.)
    */
    'log_file_permissions'       => 0644,

    /*
    |--------------------------------------------------------------------------
    | Date Format for Logs
    |--------------------------------------------------------------------------
    |
    | Each item that is logged has an associated date. You can use PHP date
    | codes to set your own date formatting
    |
    */
    'log_date_format'           => 'Y-m-d H:i:s',

    /*
    |--------------------------------------------------------------------------
    | Error Views Directory Path
    |--------------------------------------------------------------------------
    |
    | Leave this BLANK unless you would like to set something other than the default
    | Resources/Themes/your-theme/views/errors/ directory.  Use a full server path with trailing slash.
    |
    */
    'error_views_path'           => '',

    /*
    |--------------------------------------------------------------------------
    | Cache Directory Path
    |--------------------------------------------------------------------------
    |
    | Leave this BLANK unless you would like to set something other than the default
    | Resources/Storage/cache/ directory.  Use a full server path with trailing slash.
    |
    */
    'cache_path'            => '',

    /*
    |--------------------------------------------------------------------------
    | Cache Include Query String
    |--------------------------------------------------------------------------
    |
    | Whether to take the URL query string into consideration when generating
    | output cache files. Valid options are:
    |
    |	FALSE      = Disabled
    |	TRUE       = Enabled, take all query parameters into account.
    |	             Please be aware that this may result in numerous cache
    |	             files generated for the same page over and over again.
    |	array('q') = Enabled, but only take into account the specified list
    |	             of query parameters.
    |
    */
    'cache_query_string'           => false
];